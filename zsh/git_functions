## git
alias gbye='git add --all; git reset --hard HEAD'
alias gs='git status'
alias gb='git branch'
alias gma='git commit -am'
alias gmm='git commit -m'
alias gc='git checkout'
alias ga='git add'
alias gall='git add --all'
alias gp='git pull'

get_alias() {
    local git_name=$(git config user.name)
    local name=${git_name// /}
    local name=${name:l}

    echo $name
}

to_completed_branch() {
    local branch_name=$1
    local my_alias=$(get_alias)

    if [[ "$branch_name" != *"user/$my_alias"* ]]; then
        echo "user/$my_alias/$branch_name"
    else
        echo $branch_name
    fi
}

run_command() {
    local command=$1

    echo "\nê¶öê¶öê¶ö\n    ê¶öê¶öê¶ö Running command: ê¶≤ê¶≤ $command ê¶≤ê¶≤\nê¶öê¶öê¶ö\n"
    eval "$command"
}

get_master_branch() {
    local branch_indicator=$(git branch -l master main)
    # the output could be "  master" or "* master"
    # need to remove first two characters
    local master_branch=${branch_indicator:2}

    if [[ $master_branch == "master" ]] || [[ $master_branch == "main" ]]; then
        echo ${branch_indicator:2}
    else
        echo "Wrong branch name!!"
        exit 1
    fi
}

get_current_branch() {
    local current_branch=$(git rev-parse --abbrev-ref HEAD)
    echo $current_branch
}

gcm() {
    run_command "git checkout $(get_master_branch)"
}

gpc() {
    # log "Getting latest changes from the 'master|main' branch..."
    run_command "git pull --ff-only origin $(get_current_branch)"
}

gbu() {
    # create a git branch with user info
    local branch_name=$(to_completed_branch $1)
    run_command "git checkout -b $branch_name"
}

gsync() {
    # sync current `master` branch
    local previous_branch=$(git rev-parse --abbrev-ref @{-1})
    local current_branch=$(get_current_branch)

    gcm && gpc && \
        run_command "git checkout $previous_branch" && \
        run_command "git checkout $current_branch"
}

g_sync_branch_from() {
    local from_branch=$(to_completed_branch $1)
    local current_branch=$(get_current_branch)
    local my_alias=$(get_alias)

    if [[ -z "$from_branch" ]]; then
        echo "Please give a branch name to sync"
        exit 1
    fi

    if [[ "$current_branch" != *"$my_alias"* ]]; then
        echo "only support branches from $my_alias"
        exit 1
    fi

    echo "Syncing $from_branch"
    gcm
    run_command "git branch -D $current_branch"
    run_command "git checkout $from_branch"
    run_command "git checkout -b $current_branch"
}

g_pull_remote_branch() {
    local from_branch=$(to_completed_branch $1)
    run_command "git fetch origin $from_branch"
    run_command "git switch $from_branch"
}

g_clean_local_branches() {
    # g_clean_local_branches user/blah 1
    local branch_prefix=$1
    local perform_deletion=$2

    local branch_prefix_regex=${branch_prefix//\//\\\/}

    echo "branch_prefix: ${branch_prefix_regex}"

    if [[ $perform_deletion -eq 1 ]]; then
        echo "Perfom branches deletion"
        git branch | grep "^ *${branch_prefix_regex}*" | xargs git branch -D
    else
        git branch | grep "^ *${branch_prefix_regex}*"
    fi
}
